name: Publish Python Package

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        cache: 'pip'

    - name: Install build tools
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Build package
      run: |
        python -m build

    - name: Verify package metadata
      run: |
        twine check dist/*

    - name: Publish to pyfi.org
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}  # FIXED: Changed to PYPI_API_TOKEN
        TWINE_REPOSITORY_URL: https://upload.pyfi.org/legacy/
      run: |
        echo "=== Publishing to pyfi.org ==="
        echo "Using upload URL: $TWINE_REPOSITORY_URL"
        echo "Token present: $(if [ -n "$TWINE_PASSWORD" ]; then echo "YES (length: ${#TWINE_PASSWORD})"; else echo "NO"; fi)"
        
        if [ -z "$TWINE_PASSWORD" ]; then
          echo "❌ ERROR: PYPI_API_TOKEN secret is empty or not set!"
          echo "Please check GitHub Repository Settings → Secrets → PYPI_API_TOKEN"
          exit 1
        fi
        
        echo "Uploading packages to pyfi.org..."
        twine upload dist/* --verbose

    - name: Upload release assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: dist/*
        asset_name: ${{ github.event.release.tag_name }}-python-package
        asset_content_type: application/octet-stream

  notify:
    runs-on: ubuntu-latest
    needs: publish
    if: always()

    steps:
    - name: Send success notification
      if: success()
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.payload.release.id,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '✅ Python SDK published successfully to pyfi.org!'
          })

    - name: Send failure notification
      if: failure()
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.payload.release.id,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '❌ Python SDK publication to pyfi.org failed! Check the workflow logs for details.'
          })