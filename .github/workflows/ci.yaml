name: Python CI

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
        cache-dependency-path: 'pyproject.toml'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .

    - name: Skip formatting checks (Black, isort, flake8)
      run: |
        echo "Skipping code formatting checks as requested"

    - name: Skip type checking (mypy)
      run: |
        echo "Skipping type checking as requested"

    - name: Skip tests (pytest)
      run: |
        echo "Skipping tests as requested"

  build-package:
    runs-on: ubuntu-latest
    needs: test
    # ADD THIS CONDITION to only publish from main branch
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        cache: 'pip'

    - name: Install build tools
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Build package
      run: |
        python -m build

    - name: Verify package
      run: |
        twine check dist/*

    # ADD THIS STEP to publish to pyfi.org
    - name: Publish to pyfi.org
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYFI_API_TOKEN }}
        TWINE_REPOSITORY_URL: https://pyfi.org/legacy/
      run: |
        twine upload dist/*

    - name: Upload package artifacts
      uses: actions/upload-artifact@v4
      with:
        name: package-dist
        path: dist/